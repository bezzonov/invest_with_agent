import streamlit as st
import pandas as pd
from datetime import datetime, timedelta
from scripts.actual_shares_list import shares_list
from scripts.config import stock_info
from scripts.shares_fig import plot_price_chart
from scripts.connection import connection
from scripts.metrics import show_metrics, calc_metrics

st.set_page_config(
page_title="RL Trade Agent",
page_icon="üìà",
layout="centered"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
if "page" not in st.session_state:
    st.session_state.page = "main"
if "selected_stocks" not in st.session_state:
    st.session_state.selected_stocks = []
if "current_stock" not in st.session_state:
    st.session_state.current_stock = None

def main_page():
    st.title("–í—ã–±–æ—Ä –∞–∫—Ü–∏–π")

    if "selected_stocks" not in st.session_state:
        st.session_state.selected_stocks = []

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤ —Ñ–æ—Ä–º–µ
    with st.form("stock_form"):
        selected = st.multiselect(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ü–∏–∏",
            options=list(shares_list.keys()),
            format_func=lambda x: f"{shares_list[x]} ({x})",
            default=st.session_state.selected_stocks
        )
        submitted = st.form_submit_button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä")

        if submitted:
            st.session_state.selected_stocks = selected
            st.rerun()

    if st.session_state.selected_stocks:
        st.markdown("### –í—ã–±—Ä–∞–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏:")

        stocks = st.session_state.selected_stocks
        for i in range(0, len(stocks), 2):
            cols = st.columns(2)
            ticker = stocks[i]
            name = shares_list[ticker]
            if cols[0].button(f"{name} ({ticker})", key=ticker):
                st.session_state.current_stock = ticker
                st.session_state.page = "detail"
                st.rerun()

            if i + 1 < len(stocks):
                ticker = stocks[i + 1]
                name = shares_list[ticker]
                if cols[1].button(f"{name} ({ticker})", key=ticker + "_right"):
                    st.session_state.current_stock = ticker
                    st.session_state.page = "detail"
                    st.rerun()
    else:
        st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∞–∫—Ü–∏—é.")

    st.markdown("##### –í—ã–±–æ—Ä –∞–≥–µ–Ω—Ç–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ")


def detail_page():
    ticker = st.session_state.current_stock
    st.title(f"{shares_list[ticker]} ({ticker})")
    info = stock_info.get(ticker, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
    st.text_area("–û –∫–æ–º–ø–∞–Ω–∏–∏", info[0], height=200)
    st.plotly_chart(plot_price_chart(connection(),
                                             ticker,
                                             'hour_shares_data',
                                             datetime.strftime(datetime.today() - timedelta(days=60),'%Y-%m-%d')),
                                             on_select="rerun"
                                               )
    show_metrics(calc_metrics(connection(),
                            ticker,
                            'hour_shares_data',
                             datetime.strftime(datetime.today() - timedelta(days=365),'%Y-%m-%d')
                            ))


    if st.button("‚Üê –ù–∞–∑–∞–¥"):
        st.session_state.page = "main"
        st.rerun()

if st.session_state.page == "main":
    main_page()
elif st.session_state.page == "detail":
    detail_page()